{"version":3,"sources":["context/context-provider.js","hooks/scroll-to-top.js","components/header/header.js","components/nav/nav.js","components/footer/footer.js","components/gdpr-card/gdpr-card.js","components/layout/layout.js","components/post-card/post-card.js","components/posts-list/posts-list.js","components/latest-videos-list/latest-videos-list.js","views/home-view/home-view.js","views/about-view/about-view.js","views/blog-view/blog-view.js","views/post-view/post-view.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isGDPRCardVisible","StateContext","createContext","DispatchContext","reducer","state","action","type","payload","Error","ContextProvider","props","useReducer","dispatch","Provider","value","children","ScrollToTop","pathname","useLocation","useEffect","window","scroll","top","left","behavior","HeaderWrapper","styled","div","Header","className","NavWrapper","nav","Nav","refViewport","useRef","refContainer","path","ScrollBooster","viewport","current","content","direction","scrollMode","bounce","ref","to","href","target","FooterWrapper","footer","Footer","rel","GDPRCardWrapper","GDPRCard","useState","useContext","onClick","LayoutWrapper","Layout","PostCardWrapper","PostCard","post","slug","title","src","image","alt","dangerouslySetInnerHTML","__html","excerpt","PostsListWrapper","PostsList","limit","latestPosts","setLatestPosts","getLatestWordPressPosts","a","fetch","process","response","ok","json","results","posts","map","rendered","media_details","sizes","medium_large","source_url","index","key","LatestVideosListWrapper","LatestVideosList","latestVideos","setLatestVideos","getLatestYouTubeVideos","swiperParams","lazy","slidesPerView","spaceBetween","pagination","el","clickable","breakpoints","1024","768","640","320","videos","items","result","thumbnail","snippet","thumbnails","medium","url","videoUrl","resourceId","videoId","playlistId","position","video","HomeViewWrapper","HomeView","AboutViewWrapper","AboutView","pageTitle","setPageTitle","pageContent","setPageContent","getPageContent","pageSlug","BlogViewWrapper","BlogView","PostViewWrapper","PostView","useParams","setPost","getPost","console","log","formatted","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"kOAGMA,EAAe,CACnBC,mBAAmB,GAGRC,EAAeC,wBAAcH,GAC7BI,EAAkBD,0BAEzBE,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,2BACH,OAAO,2BACFF,GADL,IAEEL,kBAAmBM,EAAOE,UAG9B,QACE,MAAMC,MAAM,uBAILC,EAAkB,SAAAC,GAAU,IAAD,EACZC,qBAAWR,EAASL,GADR,mBAC/BM,EAD+B,KACxBQ,EADwB,KAGtC,OACE,kBAACZ,EAAaa,SAAd,CAAuBC,MAAOV,GAC5B,kBAACF,EAAgBW,SAAjB,CAA0BC,MAAOF,GAC9BF,EAAMK,Y,cC1BA,SAASC,IAAe,IAC7BC,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACRC,OAAOC,OAAO,CAAEC,IAAK,EAAGC,KAAM,EAAGC,SAAU,WAC1C,CAACP,IAEG,K,2xCCNT,IAAMQ,EAAgBC,IAAOC,IAAV,KAqFJC,EAxBA,SAAAlB,GACb,OACE,kBAACe,EAAD,KACE,gCACE,4BACE,yBAAKI,UAAS,SAAd,SACA,yBAAKA,UAAS,YAAd,aAEF,yBAAKA,UAAS,SACZ,+CADF,IAC4B,yBAAKA,UAAS,UAAd,a,8GCpEpC,IAAMC,EAAaJ,IAAOK,IAAV,KAmDDC,EA7CH,SAAAtB,GACV,IAAMuB,EAAcC,mBACdC,EAAeD,mBACfE,EAAOlB,cAAcD,SAc3B,OAZAE,qBAAU,WAER,IAAIkB,IAAc,CAChBC,SAAUL,EAAYM,QACtBC,QAASL,EAAaI,QACtBE,UAAW,aACXC,WAAY,YACZC,QAAQ,MAIT,IAED,kBAACb,EAAD,KACE,yBAAKc,IAAKX,EAAaJ,UAAS,kBAC9B,wBAAIe,IAAKT,GACP,wBAAIN,UAAS,UAAc,MAATO,EAAe,SAAW,KAC1C,kBAAC,IAAD,CAAMS,GAAG,KAAT,SAEF,wBAAIhB,UAAS,UAAc,WAATO,EAAoB,SAAW,KAC/C,kBAAC,IAAD,CAAMS,GAAG,UAAT,UAEF,wBAAIhB,UAAS,UAAc,UAATO,EAAmB,SAAW,KAC9C,kBAAC,IAAD,CAAMS,GAAG,SAAT,SAEF,4BACE,uBAAGC,KAAK,2DAA2DC,OAAO,UAA1E,YAKF,wC,qEC5CV,IAAMC,EAAgBtB,IAAOuB,OAAV,KAmBJC,EAjBA,SAAAxC,GACb,OACE,kBAACsC,EAAD,UACK,IACH,uBACEF,KAAK,yBACLC,OAAO,SACPI,IAAI,uBAHN,Y,oLCLN,IAAMC,EAAkB1B,IAAOC,IAAV,KAqCN0B,EA1BE,SAAA3C,GAAU,IAAD,EACU4C,oBAAS,GADnB,mBAElBlD,GAFkB,UAEVmD,qBAAWvD,IACnBY,EAAW2C,qBAAWrD,GAE5B,OACE,kBAACkD,EAAD,KACE,yBAAKvB,UAAS,oBAAezB,EAAML,kBAAoB,UAAY,KACjE,oCACA,uDACA,qEACA,4BACE8B,UAAU,6BACV2B,QAAS,kBACP5C,EAAS,CAAEN,KAAM,2BAA4BC,SAAS,MAH1D,c,qJCnBR,IAAMkD,EAAgB/B,IAAOC,IAAV,KAsBJ+B,EAdA,SAAC,GAAkB,IAAhB3C,EAAe,EAAfA,SAChB,OACE,kBAAC0C,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,8BAAO1C,GACP,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,wlBClBN,IAAM4C,EAAkBjC,IAAOC,IAAV,KAmDNiC,EApBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,kBAACF,EAAD,KACE,kBAAC,IAAD,CAAM9B,UAAS,QAAWgB,GAAE,gBAAWgB,EAAKC,OAASD,EAAKE,OAC1D,kBAAC,IAAD,CAAMlC,UAAS,YAAegB,GAAE,gBAAWgB,EAAKC,OAC9C,yBAAKE,IAAKH,EAAKI,MAAOC,IAAG,MAE3B,yBACErC,UAAS,UACTsC,wBAAyB,CAAEC,OAAQP,EAAKQ,WAE1C,kBAAC,IAAD,CAAMxB,GAAE,gBAAWgB,EAAKC,MAAQjC,UAAS,aAAzC,kB,qEC1CN,IAAMyC,EAAmB5C,IAAOC,IAAV,KA8CP4C,EA5CG,SAAC,GAAoB,IAAD,IAAjBC,aAAiB,MAAT,GAAS,IACElB,qBADF,mBAC7BmB,EAD6B,KAChBC,EADgB,KAGpCvD,qBAAU,WAERwD,MAEC,IAEH,IAAMA,EAAuB,uCAAG,gCAAAC,EAAA,+EAGLC,MAAM,GAAD,OACvBC,iCADuB,2BACyBN,EADzB,YAHA,YAGtBO,EAHsB,QAMfC,GANe,iCAOJD,EAASE,OAPL,OAOpBC,EAPoB,OASpBC,EAAQD,EAAQE,KAAI,SAAAvB,GAAI,MAAK,CACjCE,MAAOF,EAAKE,MAAMsB,SAClBhB,QAASR,EAAKQ,QAAQgB,SACtBpB,MACEJ,EAAI,UAAc,oBAAoB,GAAGyB,cAAcC,MACpDC,aAAaC,WAClB3B,KAAMD,EAAKC,SAGbY,EAAeS,GAlBW,+HAAH,qDAyB7B,OACE,kBAACb,EAAD,KACGG,GACCA,EAAYW,KAAI,SAACvB,EAAM6B,GAAP,OAAiB,kBAAC,EAAD,CAAUC,IAAKD,EAAO7B,KAAMA,S,0SCtCrE,IAAM+B,EAA0BlE,IAAOC,IAAV,KAiGdkE,EAlFU,SAAAnF,GAAU,IAAD,EACQ4C,qBADR,mBACzBwC,EADyB,KACXC,EADW,KAGhC5E,qBAAU,WAER6E,MAEC,IAEH,IAAMC,EAAe,CACnBC,MAAM,EACNC,cAAe,EACfC,aAAc,GACdC,WAAY,CACVC,GAAI,qBACJC,WAAW,GAEbC,YAAa,CACXC,KAAM,CACJN,cAAe,EACfC,aAAc,IAEhBM,IAAK,CACHP,cAAe,EACfC,aAAc,IAEhBO,IAAK,CACHR,cAAe,EACfC,aAAc,IAEhBQ,IAAK,CACHT,cAAe,EACfC,aAAc,MAKdJ,EAAsB,uCAAG,gCAAApB,EAAA,+EAGJC,MAAM,oIAAD,OAC0GC,4CAJ3G,YAGrBC,EAHqB,QAOdC,GAPc,iCAQHD,EAASE,OARN,OAQnBC,EARmB,OAUnB2B,EAAS3B,EAAQ4B,MAAM1B,KAAI,SAAA2B,GAAM,MAAK,CAC1CC,UAAWD,EAAOE,QAAQC,WAAWC,OAAOC,IAC5CC,SAAS,mCAAD,OAAqCN,EAAOE,QAAQK,WAAWC,QAA/D,iBAA+ER,EAAOE,QAAQO,WAA9F,kBAAkHT,EAAOE,QAAQQ,cAG3I1B,EAAgBc,GAfS,+HAAH,qDAqB5B,OACE,kBAACjB,EAAD,CAAyB/D,UAAS,cAC/BiE,GACC,kBAAC,IAAWG,EACTH,EAAaV,KAAI,SAACsC,EAAOhC,GAAR,OAChB,uBACEC,IAAKD,EACL5C,KAAM4E,EAAML,SACZtE,OAAM,SACNI,IAAG,uBAEH,yBAAKtB,UAAS,aACZ,yBAAKmC,IAAK0D,EAAMV,UAAW9C,IAAG,a,qECpF9C,IAAMyD,EAAkBjG,IAAOC,IAAV,KAiBNiG,EAfE,SAAAlH,GACf,OACE,kBAACiH,EAAD,KACE,kBAAC,EAAD,KACE,4CACA,kBAAC,EAAD,CAAWnD,MAAO,IAClB,6CACA,kBAAC,EAAD,S,qECXR,IAAMqD,EAAmBnG,IAAOC,IAAV,KA2CPmG,GAzCG,SAAApH,GAAU,IAAD,EACS4C,qBADT,mBAClByE,EADkB,KACPC,EADO,OAEa1E,qBAFb,mBAElB2E,EAFkB,KAELC,EAFK,KAIzB/G,qBAAU,WACRgH,EAAe,WAEd,IAEHhH,qBAAU,cAEP,CAAC8G,IAEJ,IAAME,EAAc,uCAAG,WAAMC,GAAN,iBAAAxD,EAAA,sEACEC,MAAM,GAAD,OACvBC,iCADuB,sBADP,YACfC,EADe,QAKRC,GALQ,gCAMGD,EAASE,OANZ,OAMbC,EANa,OAQnB8C,EAAa9C,EAAQ,GAAGnB,MAAMsB,UAC9B6C,EAAehD,EAAQ,GAAG1C,QAAQ6C,UATf,2CAAH,sDAYpB,OACE,kBAACwC,EAAD,KACE,kBAAC,EAAD,KACGE,GAAaE,GACZ,oCACE,4BAAKF,GACL,yBAAK5D,wBAAyB,CAACC,OAAQ6D,S,uEChCnD,IAAMI,GAAkB3G,IAAOC,IAAV,MAeN2G,GAbE,SAAA5H,GACf,OACE,kBAAC2H,GAAD,KACE,kBAAC,EAAD,KACE,oCACA,kBAAC,EAAD,CAAW7D,MAAO,S,gOCP1B,IAAM+D,GAAkB7G,IAAOC,IAAV,MAmEN6G,GAtDE,SAAA9H,GAAU,IACjBoD,EAAS2E,cAAT3E,KADgB,EAEAR,qBAFA,mBAEjBO,EAFiB,KAEX6E,EAFW,KAIlBC,EAAO,uCAAG,WAAM7E,GAAN,mBAAAc,EAAA,+EAGWC,MAAM,GAAD,OACvBC,iCADuB,uBACqBhB,EADrB,YAHhB,YAGNiB,EAHM,QAOCC,GAPD,iCAQWD,EAASE,OARpB,OAQJ8B,EARI,OAUV6B,QAAQC,IAAI,gCAAgC9B,GAEtC+B,EAAY,CAChB/E,MAAOgD,EAAO,GAAGhD,MAAMsB,SACvB7C,QAASuE,EAAO,GAAGvE,QAAQ6C,SAC3BpB,MACE8C,EAAO,GAAP,UAAuB,oBAAoB,GAAGzB,cAAcC,MACzD,aAAaE,YAEpBiD,EAAQI,GAnBE,+HAAH,sDA+Bb,OALA3H,qBAAU,WACRwH,EAAQ7E,KAEP,IAGD,kBAACyE,GAAD,KACE,kBAAC,EAAD,KACG1E,GACC,oCACE,4BAAKA,EAAKE,OACV,yBAAKlC,UAAS,oBACZ,yBAAKmC,IAAKH,EAAKI,MAAOC,IAAG,MAE3B,yBAAKC,wBAAyB,CAAEC,OAAQP,EAAKrB,e,uECpDtCd,IAAOC,IAAV,MA0BDoH,OAxBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC/H,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoB,KAAK,UACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,WCjBQ4G,QACW,cAA7B5H,OAAO6H,SAASC,UAEe,UAA7B9H,OAAO6H,SAASC,UAEhB9H,OAAO6H,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpB,QAAQoB,MAAMA,EAAMC,c","file":"static/js/main.e9d2a0e7.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst initialState = {\n  isGDPRCardVisible: true,\n}\n\nexport const StateContext = createContext(initialState)\nexport const DispatchContext = createContext()\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"toggle-isGDPRCardVisible\": {\n      return {\n        ...state,\n        isGDPRCardVisible: action.payload,\n      }\n    }\n    default:\n      throw Error(\"Wrong Action Type\")\n  }\n}\n\nexport const ContextProvider = props => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchContext.Provider value={dispatch}>\n        {props.children}\n      </DispatchContext.Provider>\n    </StateContext.Provider>\n  )\n}\n\nContextProvider.propTypes = {\n  children: PropTypes.node,\n}\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scroll({ top: 0, left: 0, behavior: 'auto' });\n  }, [pathname]);\n\n  return null;\n}\n","import React from 'react';\n// import PropTypes from \"prop-types\";\nimport styled from 'styled-components';\n\nconst HeaderWrapper = styled.div`\n  header {\n    background: #eae4de;\n    z-index: 3;\n    padding: 10vw 1rem;\n\n    h1 {\n      color: #5d5954;\n      letter-shadow: none;\n      display: flex;\n      flex-flow: wrap;\n      justify-content: space-between;\n      align-items: flex-end;\n      line-height: 0.22;\n      max-width: 40rem;\n      margin: 2rem auto 0;\n\n      .saved {\n        font-family: 'Herr Von Muellerhoff', cursive;\n        font-size: 6rem;\n        letter-spacing: 0.4rem;\n        margin-right: 1rem;\n        margin-bottom: 4rem;\n        flex: 1;\n      }\n\n      .together {\n        font-family: 'Lora';\n        text-transform: uppercase;\n        letter-spacing: 1rem;\n        margin-bottom: 4rem;\n        flex: 1;\n      }\n    }\n\n    .title {\n      font-family: 'Lora';\n      font-size: 1.5rem;\n      color: #5d5954;\n      margin: 0 auto;\n      margin-top: -2rem;\n      display: flex;\n      flex-flow: wrap;\n      max-width: 18rem;\n      justify-content: space-between;\n      align-items: flex-end;\n      line-height: 0.67;\n\n      & > div {\n        flex: 1;\n        white-space: nowrap;\n        margin-bottom: 0.6rem;\n      }\n\n      .master {\n        font-size: 3rem;\n      }\n    }\n  }\n`;\n\nconst Header = props => {\n  return (\n    <HeaderWrapper>\n      <header>\n        <h1>\n          <div className={`saved`}>Saved</div>\n          <div className={`together`}>Together</div>\n        </h1>\n        <div className={`title`}>\n          <div>at the feet of</div> <div className={`master`}>Jesus</div>\n        </div>\n        {/* <a */}\n        {/*   href=\"https://www.youtube.com/channel/UCcMwrWOscFaqptk5l43WkOQ\" */}\n        {/*   target=\"_blank\" */}\n        {/* > */}\n        {/*   YouTube */}\n        {/* </a> */}\n      </header>\n    </HeaderWrapper>\n  );\n};\n\n// Header.propTypes = {};\n\nexport default Header;\n","import React, { useEffect, useRef } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n// import PropTypes from \"prop-types\";\nimport ScrollBooster from 'scrollbooster';\nimport styled from 'styled-components';\n\nconst NavWrapper = styled.nav`\n  nav {\n    z-index: 2;\n  }\n`;\n\nconst Nav = props => {\n  const refViewport = useRef();\n  const refContainer = useRef();\n  const path = useLocation().pathname;\n\n  useEffect(() => {\n    //initialize the ScrollBooster object\n    new ScrollBooster({\n      viewport: refViewport.current,\n      content: refContainer.current,\n      direction: 'horizontal',\n      scrollMode: 'transform',\n      bounce: false,\n    });\n\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <NavWrapper>\n      <div ref={refViewport} className={`scroll-booster`}>\n        <ul ref={refContainer}>\n          <li className={`${path === '/' ? 'active' : ''}`}>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className={`${path === '/about' ? 'active' : ''}`}>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li className={`${path === '/blog' ? 'active' : ''}`}>\n            <Link to=\"/blog\">Blog</Link>\n          </li>\n          <li>\n            <a href=\"https://www.youtube.com/channel/UCcMwrWOscFaqptk5l43WkOQ\" target=\"_blank\">\n              YouTube\n            </a>\n          </li>\n          {/*this last item is necessary to adjust the scroll-nav*/}\n          <li>sbla</li>\n        </ul>\n      </div>\n    </NavWrapper>\n  );\n};\n\n// Nav.propTypes = {};\n\nexport default Nav;\n","import React from 'react';\n// import PropTypes from \"prop-types\";\nimport styled from 'styled-components';\n\nconst FooterWrapper = styled.footer``;\n\nconst Footer = props => {\n  return (\n    <FooterWrapper>\n      By{' '}\n      <a\n        href=\"https://rildev.website\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        RilDev\n      </a>\n    </FooterWrapper>\n  );\n};\n\n// Footer.propTypes = {};\n\nexport default Footer;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { StateContext, DispatchContext } from '../../context/context-provider';\n// import PropTypes from \"prop-types\";\nimport styled from 'styled-components';\n\nconst GDPRCardWrapper = styled.div`\n  .gdpr-card {\n    z-index: 3;\n\n    h2 {\n      font-size: 1.5rem;\n      padding-bottom: 0;\n    }\n  }\n`;\n\nconst GDPRCard = props => {\n  const [isVisible, setIsVisible] = useState(false);\n  const state = useContext(StateContext);\n  const dispatch = useContext(DispatchContext);\n\n  return (\n    <GDPRCardWrapper>\n      <div className={`gdpr-card ${state.isGDPRCardVisible ? 'visible' : ''}`}>\n        <h2>GDPR</h2>\n        <p>We don't use any cookies</p>\n        <p>We don't store any of your information</p>\n        <button\n          className=\"white border-white bg-blue\"\n          onClick={() =>\n            dispatch({ type: 'toggle-isGDPRCardVisible', payload: false })\n          }\n        >\n          Got it!\n        </button>\n      </div>\n    </GDPRCardWrapper>\n  );\n};\n\n// GDPRCard.propTypes = {};\n\nexport default GDPRCard;\n","import React from 'react';\n// import PropTypes from \"prop-types\";\nimport Header from '../header/header';\nimport Nav from '../nav/nav';\nimport Footer from '../footer/footer';\nimport GDPRCard from '../gdpr-card/gdpr-card';\nimport styled from 'styled-components';\n\nconst LayoutWrapper = styled.div`\n  h2 {\n    margin: 1rem 0;\n    padding: 1rem 0;\n    font-size: 2rem;\n  }\n`;\n\nconst Layout = ({ children }) => {\n  return (\n    <LayoutWrapper>\n      <Header />\n      <Nav />\n      <main>{children}</main>\n      <Footer />\n      <GDPRCard />\n    </LayoutWrapper>\n  );\n};\n\n// Layout.propTypes = {};\n\nexport default Layout;\n","import React from 'react';\n// import PropTypes from \"prop-types\";\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst PostCardWrapper = styled.div`\n  margin-bottom: 2rem;\n  padding-bottom: 2rem;\n  border-bottom: 1px solid #ddd;\n  .title {\n    font-weight: bold;\n    font-size: 1.4rem;\n    margin-bottom: 1rem;\n    text-decoration: none;\n    color: #333;\n  }\n  .thumbnail {\n    overflow: hidden;\n    width: 100%;\n    height: 200px;\n    margin-bottom: 2rem;\n    display: block;\n\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n\n  .read-more {\n    display: block;\n    text-align: right;\n  }\n`;\n\nconst PostCard = ({ post }) => {\n  return (\n    <PostCardWrapper>\n      <Link className={`title`} to={`/post/${post.slug}`}>{post.title}</Link>\n      <Link className={`thumbnail`} to={`/post/${post.slug}`}>\n        <img src={post.image} alt={``} />\n      </Link>\n      <div\n        className={`excerpt`}\n        dangerouslySetInnerHTML={{ __html: post.excerpt }}\n      />\n      <Link to={`/post/${post.slug}`} className={`read-more`}>\n        Read more...\n      </Link>\n    </PostCardWrapper>\n  );\n};\n\n// PostCard.propTypes = {};\n\nexport default PostCard;\n","import React, { useEffect, useState } from 'react';\n// import PropTypes from \"prop-types\";\nimport PostCard from '../post-card/post-card';\nimport styled from 'styled-components';\n\nconst PostsListWrapper = styled.div``;\n\nconst PostsList = ({ limit = 10 }) => {\n  const [latestPosts, setLatestPosts] = useState();\n\n  useEffect(() => {\n    //get the latest WordPress posts\n    getLatestWordPressPosts();\n    // eslint-disable-next-line\n  }, []);\n\n  const getLatestWordPressPosts = async () => {\n    try {\n      //get latest WordPress Posts\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/posts?per_page=${limit}&_embed`,\n      );\n      if (response.ok) {\n        const results = await response.json();\n\n        const posts = results.map(post => ({\n          title: post.title.rendered,\n          excerpt: post.excerpt.rendered,\n          image:\n            post['_embedded']['wp:featuredmedia'][0].media_details.sizes\n              .medium_large.source_url,\n          slug: post.slug,\n        }));\n\n        setLatestPosts(posts);\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  return (\n    <PostsListWrapper>\n      {latestPosts &&\n        latestPosts.map((post, index) => <PostCard key={index} post={post} />)}\n    </PostsListWrapper>\n  );\n};\n\n// LatestPostsList.propTypes = {};\n\nexport default PostsList;\n","import React, { useEffect, useState } from 'react';\n// import PropTypes from \"prop-types\";\nimport Swiper from 'react-id-swiper';\nimport 'swiper/swiper-bundle.min.css';\nimport styled from 'styled-components';\n\nconst LatestVideosListWrapper = styled.div`\n  .swiper-container {\n    .thumbnail {\n      overflow: hidden;\n      text-align: center;\n\n      img {\n        width: 80%;\n        // height: 100%;\n        object-fit: cover;\n      }\n    }\n  }\n`;\n\nconst LatestVideosList = props => {\n  const [latestVideos, setLatestVideos] = useState();\n\n  useEffect(() => {\n    //get the latest YouTube videos\n    getLatestYouTubeVideos();\n    // eslint-disable-next-line\n  }, []);\n\n  const swiperParams = {\n    lazy: true,\n    slidesPerView: 4,\n    spaceBetween: 40,\n    pagination: {\n      el: '.swiper-pagination',\n      clickable: true,\n    },\n    breakpoints: {\n      1024: {\n        slidesPerView: 3,\n        spaceBetween: 30,\n      },\n      768: {\n        slidesPerView: 2,\n        spaceBetween: 20,\n      },\n      640: {\n        slidesPerView: 1,\n        spaceBetween: 10,\n      },\n      320: {\n        slidesPerView: 1,\n        spaceBetween: 10,\n      },\n    },\n  };\n\n  const getLatestYouTubeVideos = async () => {\n    //get latest YouTube videos\n    try {\n      const response = await fetch(\n        `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=PLrqsSGPJTglOzYa5c1-iMDwY7FY-SKtBV&maxResults=10&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`,\n      );\n\n      if (response.ok) {\n        const results = await response.json();\n\n        const videos = results.items.map(result => ({\n          thumbnail: result.snippet.thumbnails.medium.url,\n          videoUrl: `https://www.youtube.com/watch?v=${result.snippet.resourceId.videoId}&list=${result.snippet.playlistId}&index=${result.snippet.position}`,\n        }));\n\n        setLatestVideos(videos);\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n  return (\n    <LatestVideosListWrapper className={`full-width`}>\n      {latestVideos && (\n        <Swiper {...swiperParams}>\n          {latestVideos.map((video, index) => (\n            <a\n              key={index}\n              href={video.videoUrl}\n              target={`_blank`}\n              rel={`noopener noreferrer`}\n            >\n              <div className={`thumbnail`}>\n                <img src={video.thumbnail} alt={``} />\n              </div>\n            </a>\n          ))}\n        </Swiper>\n      )}\n    </LatestVideosListWrapper>\n  );\n};\n\n// LatestVideosList.propTypes = {};\n\nexport default LatestVideosList;\n","import React from 'react';\n// import PropTypes from \"prop-types\";\nimport Layout from '../../components/layout/layout';\nimport PostsList from '../../components/posts-list/posts-list';\nimport LatestVideosList from '../../components/latest-videos-list/latest-videos-list';\nimport styled from 'styled-components';\n\nconst HomeViewWrapper = styled.div``;\n\nconst HomeView = props => {\n  return (\n    <HomeViewWrapper>\n      <Layout>\n        <h2>Latest Posts</h2>\n        <PostsList limit={5}/>\n        <h2>Latest Videos</h2>\n        <LatestVideosList />\n      </Layout>\n    </HomeViewWrapper>\n  );\n};\n\n// HomeView.propTypes = {};\n\nexport default HomeView;\n","import React, { useEffect, useState } from 'react';\n// import PropTypes from \"prop-types\";\nimport Layout from '../../components/layout/layout';\nimport styled from 'styled-components';\n\nconst AboutViewWrapper = styled.div``;\n\nconst AboutView = props => {\n  const [pageTitle, setPageTitle] = useState();\n  const [pageContent, setPageContent] = useState();\n\n  useEffect(() => {\n    getPageContent('about');\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n  // eslint-disable-next-line\n  }, [pageContent]);\n\n  const getPageContent = async pageSlug => {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/pages?slug=about`,\n    );\n\n    if (response.ok) {\n      const results = await response.json();\n\n      setPageTitle(results[0].title.rendered);\n      setPageContent(results[0].content.rendered);\n    }\n  };\n  return (\n    <AboutViewWrapper>\n      <Layout>\n        {pageTitle && pageContent && (\n          <>\n            <h2>{pageTitle}</h2>\n            <div dangerouslySetInnerHTML={{__html: pageContent}}/>\n          </>\n        )}\n      </Layout>\n    </AboutViewWrapper>\n  );\n};\n\n// AboutView.propTypes = {};\n\nexport default AboutView;\n","import React from 'react';\n// import PropTypes from \"prop-types\";\nimport Layout from '../../components/layout/layout';\nimport PostsList from '../../components/posts-list/posts-list';\nimport styled from 'styled-components';\n\nconst BlogViewWrapper = styled.div``;\n\nconst BlogView = props => {\n  return (\n    <BlogViewWrapper>\n      <Layout>\n        <h2>Blog</h2>\n        <PostsList limit={100} />\n      </Layout>\n    </BlogViewWrapper>\n  );\n};\n\n// BlogView.propTypes = {};\n\nexport default BlogView;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Layout from '../../components/layout/layout';\n// import PropTypes from \"prop-types\";\nimport styled from 'styled-components';\n\nconst PostViewWrapper = styled.div`\n  .image {\n    overflow: hidden;\n    max-height: 30rem;\n\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n`;\n\nconst PostView = props => {\n  const { slug } = useParams();\n  const [post, setPost] = useState();\n\n  const getPost = async slug => {\n    try {\n      //get latest WordPress Posts\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/posts?slug=${slug}&_embed`,\n      );\n\n      if (response.ok) {\n        const result = await response.json();\n        // prettier-ignore\n        console.log('crlntn -- post-view.js result',result)\n\n        const formatted = {\n          title: result[0].title.rendered,\n          content: result[0].content.rendered,\n          image:\n            result[0]['_embedded']['wp:featuredmedia'][0].media_details.sizes\n              [\"1536x1536\"].source_url,\n        };\n        setPost(formatted);\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    getPost(slug);\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <PostViewWrapper>\n      <Layout>\n        {post && (\n          <>\n            <h2>{post.title}</h2>\n            <div className={`image full-width`}>\n              <img src={post.image} alt={``} />\n            </div>\n            <div dangerouslySetInnerHTML={{ __html: post.content }} />\n          </>\n        )}\n      </Layout>\n    </PostViewWrapper>\n  );\n};\n\n// PostView.propTypes = {};\n\nexport default PostView;\n","import React, { useEffect, useState } from 'react';\nimport { ContextProvider } from './context/context-provider';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ScrollToTop from './hooks/scroll-to-top';\nimport '@rildev/stylized/style.css';\nimport HomeView from './views/home-view/home-view';\nimport AboutView from './views/about-view/about-view';\nimport BlogView from './views/blog-view/blog-view';\nimport PostView from './views/post-view/post-view';\nimport styled from 'styled-components';\n\nconst AppWrapper = styled.div``;\n\nfunction App() {\n  return (\n    <ContextProvider>\n      <Router>\n        <ScrollToTop />\n        <Switch>\n          <Route path=\"/about\">\n            <AboutView />\n          </Route>\n          <Route path=\"/blog\">\n            <BlogView />\n          </Route>\n          <Route path=\"/post/:slug\">\n            <PostView />\n          </Route>\n          <Route path=\"/\">\n            <HomeView />\n          </Route>\n        </Switch>\n      </Router>\n    </ContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}