{"version":3,"sources":["webpack:///./src/pages/blog/index.js","webpack:///./src/components/post-card/post-card.js","webpack:///./src/components/posts-list/posts-list.js"],"names":["BlogViewWrapper","styled","div","BlogView","props","title","limit","PostCardWrapper","PostCard","post","className","to","slug","src","image","alt","dangerouslySetInnerHTML","__html","excerpt","PostsListWrapper","PostsList","useState","latestPosts","setLatestPosts","useEffect","getLatestWordPressPosts","a","fetch","process","response","ok","json","results","posts","map","rendered","media_details","sizes","medium_large","source_url","index","key"],"mappings":"gPAOA,IAAMA,E,UAAkBC,EAAOC,IAAV,KAgBNC,UAdE,SAAAC,GACf,OACE,kBAACJ,EAAD,KACA,kBAAC,IAAD,CAAKK,MAAM,SACT,kBAAC,IAAD,KACE,oCACA,kBAAC,IAAD,CAAWC,MAAO,U,kuBCV1B,IAAMC,EAAkBN,IAAOC,IAAV,KAoDNM,EApBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,kBAACF,EAAD,KACE,kBAAC,OAAD,CAAMG,UAAS,QAAWC,GAAE,SAAWF,EAAKG,MAASH,EAAKJ,OAC1D,kBAAC,OAAD,CAAMK,UAAS,YAAeC,GAAE,SAAWF,EAAKG,MAC9C,yBAAKC,IAAKJ,EAAKK,MAAOC,IAAG,MAE3B,yBACEL,UAAS,UACTM,wBAAyB,CAAEC,OAAQR,EAAKS,WAE1C,kBAAC,OAAD,CAAMP,GAAE,SAAWF,EAAKG,KAAQF,UAAS,aAAzC,kB,qEC3CN,IAAMS,EAAmBlB,IAAOC,IAAV,KA8CPkB,IA5CG,SAAC,GAAoB,IAAD,IAAjBd,aAAiB,MAAT,GAAS,IACEe,qBAA/BC,EAD6B,KAChBC,EADgB,KAGpCC,qBAAU,WAERC,MAEC,IAEH,IAAMA,EAAuB,uCAAG,gCAAAC,EAAA,+EAGLC,MAClBC,gFAA6CtB,EADtB,WAHA,YAGtBuB,EAHsB,QAMfC,GANe,iCAOJD,EAASE,OAPL,OAOpBC,EAPoB,OASpBC,EAAQD,EAAQE,KAAI,SAAAzB,GAAI,MAAK,CACjCJ,MAAOI,EAAKJ,MAAM8B,SAClBjB,QAAST,EAAKS,QAAQiB,SACtBrB,MACEL,EAAI,UAAc,oBAAoB,GAAG2B,cAAcC,MACpDC,aAAaC,WAClB3B,KAAMH,EAAKG,SAGbW,EAAeU,GAlBW,+HAAH,qDAyB7B,OACE,kBAACd,EAAD,KACGG,GACCA,EAAYY,KAAI,SAACzB,EAAM+B,GAAP,OAAiB,kBAAC,EAAD,CAAUC,IAAKD,EAAO/B,KAAMA","file":"component---src-pages-blog-index-js-a96bd665c6b8aba10b6b.js","sourcesContent":["import React from 'react';\n// import PropTypes from \"prop-types\";\nimport SEO from \"../../components/seo\"\nimport Layout from '../../components/layout/layout';\nimport PostsList from '../../components/posts-list/posts-list';\nimport styled from 'styled-components';\n\nconst BlogViewWrapper = styled.div``;\n\nconst BlogView = props => {\n  return (\n    <BlogViewWrapper>\n    <SEO title=\"Blog\" />\n      <Layout>\n        <h2>Blog</h2>\n        <PostsList limit={100} />\n      </Layout>\n    </BlogViewWrapper>\n  );\n};\n\n// BlogView.propTypes = {};\n\nexport default BlogView;\n","import React from 'react';\n// import PropTypes from \"prop-types\";\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst PostCardWrapper = styled.div`\n  margin-bottom: 2rem;\n  padding-bottom: 2rem;\n  border-bottom: 1px solid #ddd;\n  .title {\n    font-weight: bold;\n    font-size: 1.4rem;\n    margin-bottom: 1rem;\n    text-decoration: none;\n    color: #333;\n    display: block;\n  }\n  .thumbnail {\n    overflow: hidden;\n    width: 100%;\n    height: 200px;\n    margin-bottom: 2rem;\n    display: block;\n\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n\n  .read-more {\n    display: block;\n    text-align: right;\n  }\n`;\n\nconst PostCard = ({ post }) => {\n  return (\n    <PostCardWrapper>\n      <Link className={`title`} to={`/post/${post.slug}`}>{post.title}</Link>\n      <Link className={`thumbnail`} to={`/post/${post.slug}`}>\n        <img src={post.image} alt={``} />\n      </Link>\n      <div\n        className={`excerpt`}\n        dangerouslySetInnerHTML={{ __html: post.excerpt }}\n      />\n      <Link to={`/post/${post.slug}`} className={`read-more`}>\n        Read more...\n      </Link>\n    </PostCardWrapper>\n  );\n};\n\n// PostCard.propTypes = {};\n\nexport default PostCard;\n","import React, { useEffect, useState } from 'react';\n// import PropTypes from \"prop-types\";\nimport PostCard from '../post-card/post-card';\nimport styled from 'styled-components';\n\nconst PostsListWrapper = styled.div``;\n\nconst PostsList = ({ limit = 10 }) => {\n  const [latestPosts, setLatestPosts] = useState();\n\n  useEffect(() => {\n    //get the latest WordPress posts\n    getLatestWordPressPosts();\n    // eslint-disable-next-line\n  }, []);\n\n  const getLatestWordPressPosts = async () => {\n    try {\n      //get latest WordPress Posts\n      const response = await fetch(\n        `${process.env.GATSBY_API_URL}/posts?per_page=${limit}&_embed`,\n      );\n      if (response.ok) {\n        const results = await response.json();\n\n        const posts = results.map(post => ({\n          title: post.title.rendered,\n          excerpt: post.excerpt.rendered,\n          image:\n            post['_embedded']['wp:featuredmedia'][0].media_details.sizes\n              .medium_large.source_url,\n          slug: post.slug,\n        }));\n\n        setLatestPosts(posts);\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  return (\n    <PostsListWrapper>\n      {latestPosts &&\n        latestPosts.map((post, index) => <PostCard key={index} post={post} />)}\n    </PostsListWrapper>\n  );\n};\n\n// LatestPostsList.propTypes = {};\n\nexport default PostsList;\n"],"sourceRoot":""}